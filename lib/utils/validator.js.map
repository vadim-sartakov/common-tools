{"version":3,"sources":["../../src/utils/validator.js"],"names":["valueIsAbsent","value","undefined","length","Date","Object","keys","getMessage","message","key","path","defaultMessage","required","match","pattern","RegExp","test","getValueToCompare","isNaN","getTime","min","minValue","valueToCheck","max","maxValue","reduceRecursively","array","callback","initialValue","childrenProperty","initialIndexes","reduce","accumulator","item","index","indexes","result","toTreePath","rootPath","chain","join","reducer","reducerInitialValue","validator","fullPath","allValues","errors","errorAccumulator","outerItem","resultAccumulator","innerItem","error","unique","comparator","itemX","itemY","occurrencesAccumulator","occurrences","validateValue","validators","context","Array","isArray","i","object","chainIfPromise","onResolve","args","Promise","then","resolvedValue","validateProperty","prev","propertyValue","validationResult","arrayPath","validateObject","schema","_root","rest","initialErrors","curProperty","validate"],"mappings":"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","file":"validator.js","sourcesContent":["import { format } from \"util\";\r\n\r\nconst valueIsAbsent = value => \r\n    value === undefined ||\r\n    value === null ||\r\n    value.length === 0 ||\r\n    (typeof(value) === \"object\" && !(value instanceof Date) && Object.keys(value).length === 0);\r\n\r\nconst getMessage = (message, key, path, value, defaultMessage) => {\r\n    return ( typeof(message) === \"function\" && message(key, path, value) ) || message || defaultMessage;\r\n};\r\n\r\nexport const required = message => (value, path) => {\r\n    if (valueIsAbsent(value)) return getMessage(message, \"required\", path, value, \"Value is required\");\r\n    return undefined;\r\n};\r\n\r\nexport const match = (pattern, message) => (value, path) => {\r\n    if (valueIsAbsent(value)) return;\r\n    return new RegExp(pattern).test(value) ? undefined : getMessage(message, \"match\", path, value, \"Value is not valid\");\r\n};\r\n\r\nconst getValueToCompare = value => \r\n    ( ( typeof(value) === \"string\" || isNaN(value) ) && value.length ) ||\r\n    ( ( value instanceof Date ) && value.getTime() ) ||\r\n    value;\r\n\r\nexport const min = (minValue, message) => (value, path) => {\r\n    if (valueIsAbsent(value)) return;\r\n    const valueToCheck = getValueToCompare(value);\r\n    return valueToCheck < minValue ? getMessage(message, \"min\", path, value, format(\"Should be at least %s\", minValue)) : undefined;\r\n};\r\n\r\nexport const max = (maxValue, message) => (value, path) => {\r\n    if (valueIsAbsent(value)) return;\r\n    const valueToCheck = getValueToCompare(value);\r\n    return valueToCheck > maxValue ? getMessage(message, \"max\", path, value, format(\"Should be not more than %s\", maxValue)) : undefined;\r\n};\r\n\r\nconst reduceRecursively = (array, callback, initialValue, childrenProperty, initialIndexes = []) => {\r\n    return array.reduce((accumulator, item, index) => {\r\n        const indexes = [ ...initialIndexes, index ];\r\n        let result = callback(accumulator, item, indexes);\r\n        if (item[childrenProperty]) {\r\n            result = reduceRecursively(item[childrenProperty], callback, result, childrenProperty, indexes);\r\n        }\r\n        return result;\r\n    }, initialValue);\r\n};\r\n\r\nconst toTreePath = (rootPath, childrenProperty, indexes) => {\r\n    const chain = indexes.join(`].${childrenProperty}[`);\r\n    return `${rootPath}[${chain}]`;\r\n};\r\n\r\nconst array = (reducer, reducerInitialValue, validator, childrenProperty) => (value, fullPath, allValues) => {\r\n\r\n    if (valueIsAbsent(value)) return;\r\n\r\n    const errors = reduceRecursively(value, (errorAccumulator, outerItem, indexes) => {\r\n\r\n        const result = reduceRecursively(value, (resultAccumulator, innerItem) => {\r\n            return reducer(resultAccumulator, outerItem, innerItem);\r\n        }, reducerInitialValue, childrenProperty);\r\n\r\n        const error = validator(result, fullPath, allValues);\r\n        return error ? { ...errorAccumulator, [toTreePath(fullPath, childrenProperty, indexes)]: error } : errorAccumulator;\r\n\r\n    }, { }, childrenProperty);\r\n\r\n    return Object.keys(errors).length === 0 ? undefined : errors;\r\n\r\n};\r\n\r\nexport const unique = (comparator = (itemX, itemY) => itemX === itemY, message, childrenProperty) => {\r\n    const reducer = (occurrencesAccumulator, outerItem, innerItem) => {\r\n        return comparator(outerItem, innerItem) ? occurrencesAccumulator + 1 : occurrencesAccumulator;\r\n    };\r\n    const validator = (occurrences, path) => occurrences > 1 ? getMessage(message, \"unique\", path, occurrences, \"Value is not unique\") : undefined;\r\n    return array(reducer, 0, validator, childrenProperty);\r\n};\r\n\r\nconst validateValue = (value, fullPath, validators, context) => {\r\n    if (!Array.isArray(validators)) validators = [validators];\r\n    // Returning only first error\r\n    let error;\r\n    for (let i = 0; i < validators.length; i++) {\r\n        const validator = validators[i];\r\n        error = validator(value, fullPath, context.object, context);\r\n        if (error) break;\r\n    }\r\n    return error;\r\n};\r\n\r\nconst chainIfPromise = (value, onResolve, ...args) => {\r\n    return value instanceof Promise ? value.then(resolvedValue => onResolve(resolvedValue, ...args)) : onResolve(value, ...args);\r\n};\r\n\r\nconst validateProperty = (prev, propertyValue, fullPath, validators, context) => {\r\n\r\n    let validationResult;\r\n    if (Array.isArray(propertyValue)) {\r\n        validationResult = propertyValue.reduce((prev, item, index) => {\r\n            const arrayPath = `${fullPath}[${index}]`;\r\n            return validateProperty(prev, item, arrayPath, validators, { ...context, index });\r\n        }, { });\r\n    } else if (typeof(validators) === \"object\") {\r\n        validationResult = validateObject(propertyValue, fullPath, validators, context);\r\n    } else {\r\n        validationResult = validateValue(propertyValue, fullPath, validators, context);\r\n    }\r\n\r\n    return chainIfPromise(validationResult, validationResult => {\r\n        if (typeof(validationResult) === \"object\") {\r\n            return { ...prev, ...validationResult };\r\n        } else {\r\n            return validationResult ? { ...prev, [fullPath]: validationResult } : prev;\r\n        }\r\n    });\r\n\r\n};\r\n\r\nconst validateObject = (object = { }, path, schema, context) => {\r\n    \r\n    const { _root, ...rest } = schema;\r\n    const initialErrors = (_root && validateValue(object, \"\", _root, context)) || { };\r\n\r\n    const errors = Object.keys(rest).reduce((prev, curProperty) => {\r\n        return chainIfPromise(prev, (prev, curProperty) => {\r\n            const fullPath = `${path ? path + \".\" : \"\"}${curProperty}`;\r\n            const validators = schema[curProperty];\r\n            const propertyValue = object[curProperty];\r\n            return validateProperty(prev, propertyValue, fullPath, validators, context);\r\n        }, curProperty);\r\n    }, initialErrors);\r\n\r\n    return chainIfPromise(errors, errors => Object.keys(errors).length > 0 ? errors : undefined);\r\n\r\n};\r\n\r\nexport const validate = (object, schema) => {\r\n    return validateObject(object, \"\", schema, { object });\r\n};"]}