{"version":3,"sources":["../../src/utils/validator.js"],"names":["valueIsAbsent","value","undefined","length","Date","Object","keys","getMessage","message","key","path","defaultMessage","required","match","pattern","RegExp","test","getValueToCompare","isNaN","getTime","min","minValue","valueToCheck","max","maxValue","reduceRecursively","array","callback","initialValue","childrenProperty","initialIndexes","reduce","accumulator","item","index","indexes","result","toTreePath","rootPath","chain","join","reducer","reducerInitialValue","validator","fullPath","allValues","errors","errorAccumulator","outerItem","resultAccumulator","innerItem","error","unique","comparator","itemX","itemY","occurrencesAccumulator","occurrences","validateValue","validators","context","Array","isArray","i","object","chainIfPromise","onResolve","args","Promise","then","resolvedValue","validateProperty","prev","propertyValue","validatorsType","validatorsIsObject","validationResult","arrayPath","validateObject","schema","_root","rest","initialErrors","curProperty","validate"],"mappings":"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","file":"validator.js","sourcesContent":["import { format } from \"util\";\r\n\r\nconst valueIsAbsent = value =>\r\n  value === undefined ||\r\n      value === null ||\r\n      value.length === 0 ||\r\n      (typeof (value) === \"object\" && !(value instanceof Date) && Object.keys(value).length === 0);\r\n\r\nconst getMessage = (message, key, path, value, defaultMessage) => {\r\n  return (typeof (message) === \"function\" && message(key, path, value)) || message || defaultMessage;\r\n};\r\n\r\nexport const required = message => (value, path) => {\r\n  if (valueIsAbsent(value)) return getMessage(message, \"required\", path, value, \"Value is required\");\r\n  return undefined;\r\n};\r\n\r\nexport const match = (pattern, message) => (value, path) => {\r\n  if (valueIsAbsent(value)) return;\r\n  return new RegExp(pattern).test(value) ? undefined : getMessage(message, \"match\", path, value, \"Value is not valid\");\r\n};\r\n\r\nconst getValueToCompare = value =>\r\n  ((typeof (value) === \"string\" || isNaN(value)) && value.length) ||\r\n      ((value instanceof Date) && value.getTime()) ||\r\n      value;\r\n\r\nexport const min = (minValue, message) => (value, path) => {\r\n  if (valueIsAbsent(value)) return;\r\n  const valueToCheck = getValueToCompare(value);\r\n  return valueToCheck < minValue ? getMessage(message, \"min\", path, value, format(\"Should be at least %s\", minValue)) : undefined;\r\n};\r\n\r\nexport const max = (maxValue, message) => (value, path) => {\r\n  if (valueIsAbsent(value)) return;\r\n  const valueToCheck = getValueToCompare(value);\r\n  return valueToCheck > maxValue ? getMessage(message, \"max\", path, value, format(\"Should be not more than %s\", maxValue)) : undefined;\r\n};\r\n\r\nconst reduceRecursively = (array, callback, initialValue, childrenProperty, initialIndexes = []) => {\r\n  return array.reduce((accumulator, item, index) => {\r\n    const indexes = [...initialIndexes, index];\r\n    let result = callback(accumulator, item, indexes);\r\n    if (item[childrenProperty]) {\r\n      result = reduceRecursively(item[childrenProperty], callback, result, childrenProperty, indexes);\r\n    }\r\n    return result;\r\n  }, initialValue);\r\n};\r\n\r\nconst toTreePath = (rootPath, childrenProperty, indexes) => {\r\n  const chain = indexes.join(`].${childrenProperty}[`);\r\n  return `${rootPath}[${chain}]`;\r\n};\r\n\r\nconst array = (reducer, reducerInitialValue, validator, childrenProperty) => (value, fullPath, allValues) => {\r\n\r\n  if (valueIsAbsent(value)) return;\r\n\r\n  const errors = reduceRecursively(value, (errorAccumulator, outerItem, indexes) => {\r\n\r\n    const result = reduceRecursively(value, (resultAccumulator, innerItem) => {\r\n      return reducer(resultAccumulator, outerItem, innerItem);\r\n    }, reducerInitialValue, childrenProperty);\r\n\r\n    const error = validator(result, fullPath, allValues);\r\n    return error ? { ...errorAccumulator, [toTreePath(fullPath, childrenProperty, indexes)]: error } : errorAccumulator;\r\n\r\n  }, {}, childrenProperty);\r\n\r\n  return Object.keys(errors).length === 0 ? undefined : errors;\r\n\r\n};\r\n\r\nexport const unique = (comparator = (itemX, itemY) => itemX === itemY, message, childrenProperty) => {\r\n  const reducer = (occurrencesAccumulator, outerItem, innerItem) => {\r\n    return comparator(outerItem, innerItem) ? occurrencesAccumulator + 1 : occurrencesAccumulator;\r\n  };\r\n  const validator = (occurrences, path) => occurrences > 1 ? getMessage(message, \"unique\", path, occurrences, \"Value is not unique\") : undefined;\r\n  return array(reducer, 0, validator, childrenProperty);\r\n};\r\n\r\nconst validateValue = (value, fullPath, validators, context) => {\r\n  if (!Array.isArray(validators)) validators = [validators];\r\n  // Returning only first error\r\n  let error;\r\n  for (let i = 0; i < validators.length; i++) {\r\n    const validator = validators[i];\r\n    error = validator(value, fullPath, context.object, context);\r\n    if (error) break;\r\n  }\r\n  return error;\r\n};\r\n\r\nconst chainIfPromise = (value, onResolve, ...args) => {\r\n  return value instanceof Promise ? value.then(resolvedValue => onResolve(resolvedValue, ...args)) : onResolve(value, ...args);\r\n};\r\n\r\nconst validateProperty = (prev, propertyValue, fullPath, validators, context) => {\r\n\r\n  const validatorsType = typeof (validators);\r\n  const validatorsIsObject = !Array.isArray(validators) && validatorsType === \"object\";\r\n\r\n  let validationResult;\r\n  if (Array.isArray(propertyValue) && validatorsIsObject) {\r\n    validationResult = propertyValue.reduce((prev, item, index) => {\r\n      const arrayPath = `${fullPath}[${index}]`;\r\n      return validateProperty(prev, item, arrayPath, validators, { ...context, index });\r\n    }, {});\r\n  } else if (validatorsIsObject) {\r\n    validationResult = validateObject(propertyValue, fullPath, validators, context);\r\n  } else {\r\n    validationResult = validateValue(propertyValue, fullPath, validators, context);\r\n  }\r\n\r\n  return chainIfPromise(validationResult, validationResult => {\r\n    if (typeof (validationResult) === \"object\") {\r\n      return { ...prev, ...validationResult };\r\n    } else {\r\n      return validationResult ? { ...prev, [fullPath]: validationResult } : prev;\r\n    }\r\n  });\r\n\r\n};\r\n\r\nconst validateObject = (object = {}, path, schema, context) => {\r\n\r\n  const { _root, ...rest } = schema;\r\n  const initialErrors = (_root && validateValue(object, \"\", _root, context)) || {};\r\n\r\n  const errors = Object.keys(rest).reduce((prev, curProperty) => {\r\n    return chainIfPromise(prev, (prev, curProperty) => {\r\n      const fullPath = `${path ? path + \".\" : \"\"}${curProperty}`;\r\n      const validators = schema[curProperty];\r\n      const propertyValue = object[curProperty];\r\n      return validateProperty(prev, propertyValue, fullPath, validators, context);\r\n    }, curProperty);\r\n  }, initialErrors);\r\n\r\n  return chainIfPromise(errors, errors => Object.keys(errors).length > 0 ? errors : undefined);\r\n\r\n};\r\n\r\nexport const validate = (object, schema) => {\r\n  return validateObject(object, \"\", schema, { object });\r\n};"]}