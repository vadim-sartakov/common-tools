{"version":3,"sources":["../../src/utils/security.js"],"names":["getPermissions","user","schema","accessKeys","roles","reduce","permissions","role","rolePermissions","ALL","mergedAccesses","accessKey","prevPermission","curPermission","all","curPermissionKeys","Object","keys","forEach","some","curPermKey","prevPermKey","mergedAccess","modifierKey","prevModifier","curModifier","mergedModifier"],"mappings":";;;;;;;;;;;;AAAO,IAAMA,0CAAiB,SAAjBA,cAAiB,CAACC,IAAD,EAAOC,MAAP,EAAiC;AAAA,sCAAfC,UAAe;AAAfA,kBAAe;AAAA;;AAE3D,WAAOF,KAAKG,KAAL,CAAWC,MAAX,CAAkB,UAACC,WAAD,EAAcC,IAAd,EAAuB;;AAE5C,YAAMC,kBAAkBN,OAAOK,IAAP,KAAgBL,OAAOO,GAAvB,IAA8B,EAAtD;AACA,YAAMC,iBAAiBP,WAAWE,MAAX,CAAkB,UAACK,cAAD,EAAiBC,SAAjB,EAA+B;;AAEpE,gBAAMC,iBAAiBN,YAAYK,SAAZ,CAAvB;AACA,gBAAIE,gBAAgBL,gBAAgBG,SAAhB,KAA+BJ,SAAS,OAAT,IAAoB,IAAnD,IAA4DC,gBAAgBM,GAA5E,IAAmF,KAAvG;AACA,gBAAKF,kBAAkBC,kBAAkB,KAArC,IAA+CD,mBAAmB,IAAtE,EAA4E,OAAOF,cAAP;;AAE5E,gBAAI,QAAOG,aAAP,yCAAOA,aAAP,OAA0B,QAA9B,EAAwC;;AAEpC;AACA;AACA,oBAAME,oBAAoBC,OAAOC,IAAP,CAAYJ,aAAZ,CAA1B;AACAD,kCAAkBI,OAAOC,IAAP,CAAYL,cAAZ,EAA4BM,OAA5B,CAAoC,uBAAe;AACjE,wBAAI,CAACH,kBAAkBI,IAAlB,CAAuB;AAAA,+BAAcC,eAAeC,WAA7B;AAAA,qBAAvB,CAAL,EAAuE;AACnER,sCAAcQ,WAAd,IAA6B,KAA7B;AACH;AACJ,iBAJiB,CAAlB;;AAMAR,gCAAgBG,OAAOC,IAAP,CAAYJ,aAAZ,EAA2BR,MAA3B,CAAkC,UAACiB,YAAD,EAAeC,WAAf,EAA+B;;AAE7E,wBAAMC,eAAeF,gBAAgBA,aAAaC,WAAb,CAArC;AACA,wBAAIE,cAAcZ,cAAcU,WAAd,CAAlB;;AAEA,wBAAIC,iBAAiB,KAArB,EAA4B,OAAOF,YAAP;AAC5B,wBAAI,OAAOG,WAAP,KAAwB,UAA5B,EAAwCA,cAAcA,YAAYxB,IAAZ,CAAd;;AAExC,wBAAIyB,uBAAJ;AACA,mCAAcD,WAAd,yCAAcA,WAAd;AACI,6BAAK,QAAL;AACIC,0DAAsBF,YAAtB,EAAuCC,WAAvC;AACA;AACJ,6BAAK,QAAL;AACIC,6CAAiB,MAAGF,eAAeA,eAAe,GAA9B,GAAoC,EAAvC,IAA8CC,WAA/D;AACA;AACJ;AACIC,6CAAiBD,WAAjB;AARR;;AAWA,wCAAYH,YAAZ,sBAA2BC,WAA3B,EAAyCG,cAAzC;AAEH,iBAtBe,EAsBbd,kBAAkB,EAtBL,CAAhB;AAwBH;;AAED,gCAAYF,cAAZ,sBAA6BC,SAA7B,EAAyCE,aAAzC;AAEH,SA7CsB,EA6CpB,EA7CoB,CAAvB;AA8CA,4BAAYP,WAAZ,EAA4BI,cAA5B;AACH,KAlDM,EAkDJ,EAlDI,CAAP;AAoDH,CAtDM","file":"security.js","sourcesContent":["export const getPermissions = (user, schema, ...accessKeys) => {\r\n\r\n    return user.roles.reduce((permissions, role) => {\r\n\r\n        const rolePermissions = schema[role] || schema.ALL || { };\r\n        const mergedAccesses = accessKeys.reduce((mergedAccesses, accessKey) => {\r\n\r\n            const prevPermission = permissions[accessKey];\r\n            let curPermission = rolePermissions[accessKey] || (role === \"ADMIN\" && true) || rolePermissions.all || false;\r\n            if ((prevPermission && curPermission === false) || prevPermission === true) return mergedAccesses;\r\n            \r\n            if (typeof(curPermission) === \"object\") {\r\n\r\n                // Absense of previous modifier indicates that access has been extended by this particular modifier\r\n                // Setting missing modifier to false\r\n                const curPermissionKeys = Object.keys(curPermission);\r\n                prevPermission && Object.keys(prevPermission).forEach(prevPermKey => {\r\n                    if (!curPermissionKeys.some(curPermKey => curPermKey === prevPermKey)) {\r\n                        curPermission[prevPermKey] = false;\r\n                    }\r\n                });\r\n\r\n                curPermission = Object.keys(curPermission).reduce((mergedAccess, modifierKey) => {\r\n\r\n                    const prevModifier = mergedAccess && mergedAccess[modifierKey];\r\n                    let curModifier = curPermission[modifierKey];\r\n\r\n                    if (prevModifier === false) return mergedAccess;\r\n                    if (typeof(curModifier) === \"function\") curModifier = curModifier(user);\r\n\r\n                    let mergedModifier;\r\n                    switch(typeof(curModifier)) {\r\n                        case \"object\":\r\n                            mergedModifier = { ...prevModifier, ...curModifier };\r\n                            break;\r\n                        case \"string\":\r\n                            mergedModifier = `${prevModifier ? prevModifier + \" \" : \"\"}` + curModifier;\r\n                            break;\r\n                        default:\r\n                            mergedModifier = curModifier;\r\n                    }\r\n\r\n                    return { ...mergedAccess, [modifierKey]: mergedModifier };\r\n\r\n                }, prevPermission || {});\r\n\r\n            }\r\n\r\n            return { ...mergedAccesses, [accessKey]: curPermission };\r\n\r\n        }, { });\r\n        return { ...permissions, ...mergedAccesses };\r\n    }, { });\r\n\r\n};"]}