{"version":3,"sources":["../../src/utils/security.js"],"names":["getPermissions","user","securitySchema","accessModifiers","roles","reduce","resultPermissions","curRole","curRolePermissions","mergedPermissions","mergeResult","modifier","prevPermValue","curPermValue","valueType","Error","mergeValue","push","ALL"],"mappings":";;;;;;;;;;;;;;AAAO,IAAMA,0CAAiB,SAAjBA,cAAiB,CAACC,IAAD,EAAOC,cAAP,EAA8C;AAAA,sCAApBC,eAAoB;AAApBA,uBAAoB;AAAA;;AAExE,WAAOF,KAAKG,KAAL,CAAWC,MAAX,CAAkB,UAACC,iBAAD,EAAoBC,OAApB,EAAgC;;AAErD,YAAMC,qBAAqBN,eAAeK,OAAf,KAA2B,EAAtD;AACA,YAAME,oBAAoBN,gBAAgBE,MAAhB,CAAuB,UAACK,WAAD,EAAcC,QAAd,EAA2B;AAAA;;AAExE,gBAAMC,gBAAgBN,kBAAkBK,QAAlB,CAAtB;AACA,gBAAIE,eAAeL,mBAAmBG,QAAnB,KACdJ,YAAY,OAAZ,IAAuB,IADT,IAEfK,aAFe,IAGf,KAHJ;AAIA,gBAAME,mBAAmBD,YAAnB,yCAAmBA,YAAnB,CAAN;;AAEA,gBAAIC,cAAc,UAAlB,EAA8BD,eAAeA,aAAaZ,IAAb,CAAf;AAC9B,gBAAIW,iBAAiB,QAAOA,aAAP,yCAAOA,aAAP,eAAiCC,YAAjC,yCAAiCA,YAAjC,EAArB,EAAqE,MAAM,IAAIE,KAAJ,CAAU,YAAV,CAAN;;AAErE,gBAAIC,mBAAJ;AACA,oBAAQF,SAAR;AACI,qBAAK,QAAL;AACIE,8CAAkBJ,aAAlB,EAAoCC,YAApC;AACA;AACJ,qBAAK,UAAL;AACIG,iCAAa,EAAb;AACAJ,qCAAiB,2BAAWK,IAAX,uCAAmBL,aAAnB,EAAjB;AACAI,+BAAWC,IAAX,CAAgBJ,YAAhB;AACA;AACJ;AACIG,iCAAaH,YAAb;AAVR;;AAaA,gCAAYH,WAAZ,sBAA0BC,QAA1B,EAAqCK,UAArC;AAEH,SA5ByB,EA4BvB,EA5BuB,CAA1B;AA6BA,4BAAYV,iBAAZ,EAAkCG,iBAAlC;AACH,KAjCM,EAiCJP,eAAegB,GAAf,IAAsB,EAjClB,CAAP;AAmCH,CArCM","file":"security.js","sourcesContent":["export const getPermissions = (user, securitySchema, ...accessModifiers) => {\r\n\r\n    return user.roles.reduce((resultPermissions, curRole) => {\r\n\r\n        const curRolePermissions = securitySchema[curRole] || { };\r\n        const mergedPermissions = accessModifiers.reduce((mergeResult, modifier) => {\r\n\r\n            const prevPermValue = resultPermissions[modifier];\r\n            let curPermValue = curRolePermissions[modifier] ||\r\n                (curRole === \"ADMIN\" && true) ||\r\n                prevPermValue ||\r\n                false;\r\n            const valueType = typeof(curPermValue);\r\n            \r\n            if (valueType === \"function\") curPermValue = curPermValue(user);\r\n            if (prevPermValue && typeof(prevPermValue) !== typeof(curPermValue)) throw new Error(\"MixedTypes\");\r\n\r\n            let mergeValue;\r\n            switch (valueType) {\r\n                case \"object\":\r\n                    mergeValue = { ...prevPermValue, ...curPermValue };\r\n                    break;\r\n                case \"function\":\r\n                    mergeValue = [];\r\n                    prevPermValue && mergeValue.push(...prevPermValue);\r\n                    mergeValue.push(curPermValue);\r\n                    break;\r\n                default:\r\n                    mergeValue = curPermValue;\r\n            }\r\n\r\n            return { ...mergeResult, [modifier]: mergeValue };\r\n\r\n        }, { });\r\n        return { ...resultPermissions, ...mergedPermissions };\r\n    }, securitySchema.ALL || { });\r\n\r\n};"]}